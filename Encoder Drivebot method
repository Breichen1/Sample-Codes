//init calculations
// encoder clicks are originally 1680
    // multiply that by drive train gear ratio (two thirds)   
    private static final int ENCODER_CLICKS = 28; //HD hex motor
    private static final double WHEEL_DIAM = 9.6; //gobuilda in CM
    private static final double WHEEL_CIRC = WHEEL_DIAM * Math.PI;
    private static final double DRIVE_GEAR_RATIO = 2/3;
    private static final double CLICKS_PER_CM = ENCODER_CLICKS / WHEEL_CIRC;


----------

/**********************************************
     * BEGIN METHODS driveDistance, driveBot
     *********************************************/
    
    /**
    * Drive Distance Method
    * Calculate distance from CM to encoder counts
    */  
    public static double driveDistance(double distance)
    {
        double drive  = (ENCODER_CLICKS/ WHEEL_CIRC);
        int outputClicks= (int)Math.floor(drive * distance);
        return outputClicks;
    }
    // END driveDistance() method


public void driveBot(double distanceInCMleft, double distanceInCMright, double power, double timeoutS) 
    {
        telemetry.addData("status","encoder reset");
        telemetry.update();
        
        int rightTarget;
        int leftTarget;

        if(opModeIsActive()) 
        {
            telemetry.addData("status","getEncoderClicks");
            telemetry.update();
            
            rightTarget = (int) driveDistance(distanceInCMright);
            leftTarget = (int) driveDistance(distanceInCMleft);

            rightfront.setTargetPosition(rightTarget);
            leftfront.setTargetPosition(leftTarget);
            rightback.setTargetPosition(rightTarget);
            leftback.setTargetPosition(leftTarget);

            rightfront.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            leftfront.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            rightback.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            leftback.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            
            runtime.reset();

            rightfront.setPower(power);
            leftfront.setPower(power);
            rightback.setPower(power);
            leftback.setPower(power);
        
            while (opModeIsActive() &&
                (runtime.seconds() < timeoutS) &&
                (left.isBusy() && right.isBusy() ))
                {
                    telemetry.addData("Path1", "leftTarget, rightTarget" );
                    telemetry.update();
                }
            left.setPower(0);
            right.setPower(0);
            left.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
            right.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        }   
    }
    // END driveBot method


    //example step in autonomous
    driveBot(91.4,91.4,0.4,5.0);
            telemetry.addData("status","first run to position called" );
            telemetry.addData("status", left.getMode() );
            telemetry.addData("status","left motor,  %7d", left.getCurrentPosition() );
            telemetry.addData("status","right motor,  %7d", right.getCurrentPosition() );
            telemetry.update();
            right.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
            left.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
            sleep(1000);