// Initialize IMU
imu.initialize(
     new IMU.Parameters(
          new RevHubOrientationOnRobot(
               RevHubOrientationOnRobot.LogoFacingDirection.UP,
               RevHubOrientationOnRobot.UsbFacingDirection.FORWARD
          )
     )
);


--------------------

//function for checking the orientation of the robot

double live_gyro_value = 0;
double gyro_offset = 0;

double getHeading() {
// read the gyro
live_gyro_value = imu.getAngularOrientation(AxesReference.INTRINSIC, AxesOrder.ZYX, AngleUnit.DEGREES);
imu.getPosition();
return (live_gyro_value - gyro_offset);
}

//Then when you want to reset heading back to zero, just update the offset
//with the following method:
void reset_gyro( ) {
gyro_offsett = live_gyro_value;
}


--------------------

//Diagnostic code to check the IMU
void GyroDiagnostics() {
    YawPitchRollAngles orientation = imu.getRobotYawPitchRollAngles();
    AngularVelocity angularVelocity = imu.getRobotAngularVelocity(AngleUnit.DEGREES);

    telemetry.addData("Yaw (Z)", "%.2f Deg. (Heading)", orientation.getYaw(AngleUnit.DEGREES));
    telemetry.addData("Pitch (X)", "%.2f Deg.", orientation.getPitch(AngleUnit.DEGREES));
    telemetry.addData("Roll (Y)", "%.2f Deg.\n", orientation.getRoll(AngleUnit.DEGREES));
    telemetry.addData("Yaw (Z) velocity", "%.2f Deg/Sec", angularVelocity.zRotationRate);
    telemetry.addData("Pitch (X) velocity", "%.2f Deg/Sec", angularVelocity.xRotationRate);
    telemetry.addData("Roll (Y) velocity", "%.2f Deg/Sec", angularVelocity.yRotationRate);
}


------------------


//IMU Calibration check
private boolean IMU_Calibrated() {
     telemetry.addData("IMU Calibration Status", imu.getCalibrationStatus());
     telemetry.addData("Gyro Calibrated", imu.isGyroCalibrated() ? "True" : "False");
     telemetry.addData("System Status", imu.getSystemStatus().toString());
     return imu.isGyroCalibrated();
 }